import { HeroName, WeatherType } from '../../types';

export const clampTokenDelta = (delta: number) => Math.max(-5, Math.min(5, delta));

export type FocusContext = {
    playerCard: string;
    aiCard: string;
    weather: WeatherType;
    playerHero: HeroName;
    aiHero: HeroName;
    tokenDelta: number;
    sampleRate: number;
    targetAiWinRate: number;
    priorWeight: number;
};

export type FocusContextDetail = FocusContext & {
    contextKey: string;
    clampedDelta: number;
};

export const buildContextKey = (params: {
    playerCard: string;
    weather: WeatherType;
    playerHero: HeroName;
    aiHero: HeroName;
    tokenDelta: number;
}): string => {
    const clampedDelta = clampTokenDelta(params.tokenDelta);
    return `${params.playerCard}|${params.weather}|${params.playerHero}vs${params.aiHero}|delta:${clampedDelta}`;
};

export const WEAK_CONTEXT_FOCUS: FocusContextDetail[] = [
    {
        playerCard: 'Licht Avatar',
        aiCard: 'Chaos Avatar',
        weather: 'Erdbeben',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.03,
        targetAiWinRate: 0.68,
        priorWeight: 6,
        contextKey: buildContextKey({
            playerCard: 'Licht Avatar',
            weather: 'Erdbeben',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Licht Elementar',
        aiCard: 'Chaos Avatar',
        weather: 'Erdbeben',
        playerHero: 'Drache',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.025,
        targetAiWinRate: 0.62,
        priorWeight: 5,
        contextKey: buildContextKey({
            playerCard: 'Licht Elementar',
            weather: 'Erdbeben',
            playerHero: 'Drache',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Luft Elementar',
        aiCard: 'Schatten Avatar',
        weather: 'Windsturm',
        playerHero: 'Zauberer',
        aiHero: 'Zauberer',
        tokenDelta: 4,
        sampleRate: 0.025,
        targetAiWinRate: 0.64,
        priorWeight: 5,
        contextKey: buildContextKey({
            playerCard: 'Luft Elementar',
            weather: 'Windsturm',
            playerHero: 'Zauberer',
            aiHero: 'Zauberer',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Eis Elementar',
        aiCard: 'Feuer Avatar',
        weather: 'Schneesturm',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 4,
        sampleRate: 0.022,
        targetAiWinRate: 0.6,
        priorWeight: 5,
        contextKey: buildContextKey({
            playerCard: 'Eis Elementar',
            weather: 'Schneesturm',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Licht Avatar',
        aiCard: 'Schatten Avatar',
        weather: 'Nebel',
        playerHero: 'Drache',
        aiHero: 'Zauberer',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Licht Avatar',
            weather: 'Nebel',
            playerHero: 'Drache',
            aiHero: 'Zauberer',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Blitz Avatar',
        aiCard: 'Chaos Elementar',
        weather: 'Gewitter',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 4,
        sampleRate: 0.02,
        targetAiWinRate: 0.58,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Blitz Avatar',
            weather: 'Gewitter',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Erde Elementar',
        aiCard: 'Chaos Avatar',
        weather: 'Erdbeben',
        playerHero: 'Kriegsherr',
        aiHero: 'Drache',
        tokenDelta: 4,
        sampleRate: 0.02,
        targetAiWinRate: 0.57,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Erde Elementar',
            weather: 'Erdbeben',
            playerHero: 'Kriegsherr',
            aiHero: 'Drache',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Chaos Elementar',
        aiCard: 'Licht Avatar',
        weather: 'Gewitter',
        playerHero: 'Drache',
        aiHero: 'Zauberer',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Chaos Elementar',
            weather: 'Gewitter',
            playerHero: 'Drache',
            aiHero: 'Zauberer',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Schatten Avatar',
        aiCard: 'Licht Avatar',
        weather: 'Finsternis',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Schatten Avatar',
            weather: 'Finsternis',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Schatten Elementar',
        aiCard: 'Licht Avatar',
        weather: 'Finsternis',
        playerHero: 'Zauberer',
        aiHero: 'Zauberer',
        tokenDelta: 4,
        sampleRate: 0.018,
        targetAiWinRate: 0.58,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Schatten Elementar',
            weather: 'Finsternis',
            playerHero: 'Zauberer',
            aiHero: 'Zauberer',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Magie Avatar',
        aiCard: 'Chaos Avatar',
        weather: 'Magischer Sturm',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 4,
        sampleRate: 0.018,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Magie Avatar',
            weather: 'Magischer Sturm',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Wasser Avatar',
        aiCard: 'Blitz Avatar',
        weather: 'Gewitter',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 4,
        sampleRate: 0.018,
        targetAiWinRate: 0.56,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Wasser Avatar',
            weather: 'Gewitter',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Feuer Avatar',
        aiCard: 'Wasser Avatar',
        weather: 'Hitzewelle',
        playerHero: 'Drache',
        aiHero: 'Zauberer',
        tokenDelta: 4,
        sampleRate: 0.018,
        targetAiWinRate: 0.58,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Feuer Avatar',
            weather: 'Hitzewelle',
            playerHero: 'Drache',
            aiHero: 'Zauberer',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Erde Avatar',
        aiCard: 'Luft Avatar',
        weather: 'Sandsturm',
        playerHero: 'Kriegsherr',
        aiHero: 'Zauberer',
        tokenDelta: 4,
        sampleRate: 0.018,
        targetAiWinRate: 0.55,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Erde Avatar',
            weather: 'Sandsturm',
            playerHero: 'Kriegsherr',
            aiHero: 'Zauberer',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Chaos Avatar',
        aiCard: 'Licht Avatar',
        weather: 'Gewitter',
        playerHero: 'Zauberer',
        aiHero: 'Zauberer',
        tokenDelta: 4,
        sampleRate: 0.017,
        targetAiWinRate: 0.58,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Chaos Avatar',
            weather: 'Gewitter',
            playerHero: 'Zauberer',
            aiHero: 'Zauberer',
            tokenDelta: 4,
        }),
        clampedDelta: clampTokenDelta(4),
    },
    {
        playerCard: 'Licht Elementar',
        aiCard: 'Chaos Avatar',
        weather: 'Nebel',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.017,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Licht Elementar',
            weather: 'Nebel',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Chaos Avatar',
        aiCard: 'Licht Elementar',
        weather: 'Magischer Sturm',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.017,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Chaos Avatar',
            weather: 'Magischer Sturm',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Licht Avatar',
        aiCard: 'Chaos Elementar',
        weather: 'Regen',
        playerHero: 'Drache',
        aiHero: 'Zauberer',
        tokenDelta: 5,
        sampleRate: 0.017,
        targetAiWinRate: 0.59,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Licht Avatar',
            weather: 'Regen',
            playerHero: 'Drache',
            aiHero: 'Zauberer',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Licht Avatar',
        aiCard: 'Luft Elementar',
        weather: 'Windsturm',
        playerHero: 'Zauberer',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.58,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Licht Avatar',
            weather: 'Windsturm',
            playerHero: 'Zauberer',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Luft Avatar',
        aiCard: 'Magie Avatar',
        weather: 'Windsturm',
        playerHero: 'Drache',
        aiHero: 'Drache',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Luft Avatar',
            weather: 'Windsturm',
            playerHero: 'Drache',
            aiHero: 'Drache',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
    {
        playerCard: 'Licht Avatar',
        aiCard: 'Erde Avatar',
        weather: 'Regen',
        playerHero: 'Drache',
        aiHero: 'Zauberer',
        tokenDelta: 5,
        sampleRate: 0.02,
        targetAiWinRate: 0.6,
        priorWeight: 4,
        contextKey: buildContextKey({
            playerCard: 'Licht Avatar',
            weather: 'Regen',
            playerHero: 'Drache',
            aiHero: 'Zauberer',
            tokenDelta: 5,
        }),
        clampedDelta: clampTokenDelta(5),
    },
];

export const FOCUS_CONTEXT_INDEX = WEAK_CONTEXT_FOCUS.reduce<
    Map<string, FocusContextDetail[]>
>((map, detail) => {
    const existing = map.get(detail.contextKey) ?? [];
    existing.push(detail);
    map.set(detail.contextKey, existing);
    return map;
}, new Map());
